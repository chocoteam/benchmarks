<instance format="XCSP3" type="COP">
  <variables>
    <array id="s" note="s[i] is the starting time of the ith task" size="[32]"> 0..58 </array>
  </variables>
  <constraints>
    <group note="enforcing precedences">
      <intension> le(add(%0,%1),%2) </intension>
      <args> s[0] 0 s[1] </args>
      <args> s[0] 0 s[2] </args>
      <args> s[0] 0 s[3] </args>
      <args> s[1] 6 s[22] </args>
      <args> s[1] 6 s[28] </args>
      <args> s[2] 6 s[9] </args>
      <args> s[2] 6 s[12] </args>
      <args> s[2] 6 s[25] </args>
      <args> s[3] 9 s[4] </args>
      <args> s[3] 9 s[5] </args>
      <args> s[3] 9 s[6] </args>
      <args> s[4] 1 s[17] </args>
      <args> s[4] 1 s[19] </args>
      <args> s[4] 1 s[23] </args>
      <args> s[5] 5 s[10] </args>
      <args> s[5] 5 s[13] </args>
      <args> s[5] 5 s[22] </args>
      <args> s[6] 10 s[7] </args>
      <args> s[6] 10 s[8] </args>
      <args> s[6] 10 s[16] </args>
      <args> s[7] 2 s[11] </args>
      <args> s[7] 2 s[19] </args>
      <args> s[8] 6 s[15] </args>
      <args> s[9] 7 s[11] </args>
      <args> s[9] 7 s[14] </args>
      <args> s[9] 7 s[16] </args>
      <args> s[10] 1 s[14] </args>
      <args> s[11] 6 s[20] </args>
      <args> s[12] 1 s[21] </args>
      <args> s[13] 10 s[18] </args>
      <args> s[13] 10 s[26] </args>
      <args> s[14] 8 s[18] </args>
      <args> s[14] 8 s[19] </args>
      <args> s[15] 5 s[20] </args>
      <args> s[15] 5 s[24] </args>
      <args> s[16] 7 s[20] </args>
      <args> s[16] 7 s[26] </args>
      <args> s[17] 9 s[18] </args>
      <args> s[18] 5 s[21] </args>
      <args> s[18] 5 s[27] </args>
      <args> s[18] 5 s[30] </args>
      <args> s[19] 10 s[27] </args>
      <args> s[19] 10 s[29] </args>
      <args> s[20] 3 s[21] </args>
      <args> s[20] 3 s[22] </args>
      <args> s[20] 3 s[27] </args>
      <args> s[21] 5 s[29] </args>
      <args> s[22] 2 s[30] </args>
      <args> s[23] 4 s[25] </args>
      <args> s[24] 8 s[25] </args>
      <args> s[24] 8 s[26] </args>
      <args> s[24] 8 s[29] </args>
      <args> s[25] 2 s[30] </args>
      <args> s[26] 2 s[28] </args>
      <args> s[27] 6 s[28] </args>
      <args> s[28] 2 s[31] </args>
      <args> s[29] 10 s[31] </args>
      <args> s[30] 9 s[31] </args>
    </group>
    <cumulative>
      <origins> s[1..4] s[7..9] s[11..12] s[14] s[16..19] s[21..22] s[25..27] s[29] </origins>
      <lengths> 6 6 9 1 2 6 7 6 1 8 7 9 5 10 5 2x3 6 10 </lengths>
      <heights> 10 9 1 1 3 2 3 4 8 6 3 7 2 2 1 7 1 6 10 6 </heights>
      <condition> (le,19) </condition>
    </cumulative>
    <cumulative>
      <origins> s[1..2] s[5..7] s[9..15] s[17..24] s[27..30] </origins>
      <lengths> 6 6 5 10 2 7 1 6 1 10 8 5 9 5 10 3 5 2 4 8 6 2 10 9 </lengths>
      <heights> 10 3 9 9 5 5 4 4 3 3 10 9 6 3 3 8 1 6 8 4 8 7 8 4 </heights>
      <condition> (le,29) </condition>
    </cumulative>
    <cumulative>
      <origins> s[1] s[3..8] s[10..13] s[15..19] s[21..29] </origins>
      <lengths> 6 9 1 5 10 2 6 1 6 1 10 5 7 9 5 10 5 2 4 8 2 2 6 2 10 </lengths>
      <heights> 4 2 8 5 6 2 4 8 4 5 9 10 3 7 2 4 5 7 5 6 7 7 10 4 1 </heights>
      <condition> (le,24) </condition>
    </cumulative>
    <cumulative>
      <origins> s[3..5] s[8..9] s[11..14] s[18..30] </origins>
      <lengths> 9 1 5 6 7 6 1 10 8 5 10 3 5 2 4 8 2 2 6 2 10 9 </lengths>
      <heights> 2 6 4 10 2 8 5 9 4 8 7 3 3 8 8 4 3 4 1 3 6 2 </heights>
      <condition> (le,27) </condition>
    </cumulative>
    <intension note="redundant non-overlapping constraints"> or(le(add(s[1],6),s[27]),le(add(s[27],6),s[1])) </intension>
  </constraints>
  <objectives>
    <minimize type="sum"> add(mul(5,max(0,sub(1,s[0]))),mul(4,max(0,sub(s[0],1)))) add(mul(2,max(0,sub(30,s[1]))),mul(2,max(0,sub(s[1],30)))) add(mul(4,max(0,sub(7,s[2]))),mul(0,max(0,sub(s[2],7)))) add(mul(5,max(0,sub(0,s[3]))),mul(2,max(0,sub(s[3],0)))) add(mul(0,max(0,sub(17,s[4]))),mul(2,max(0,sub(s[4],17)))) add(mul(1,max(0,sub(16,s[5]))),mul(5,max(0,sub(s[5],16)))) add(mul(0,max(0,sub(18,s[6]))),mul(0,max(0,sub(s[6],18)))) add(mul(5,max(0,sub(24,s[7]))),mul(2,max(0,sub(s[7],24)))) add(mul(2,max(0,sub(21,s[8]))),mul(0,max(0,sub(s[8],21)))) add(mul(2,max(0,sub(8,s[9]))),mul(2,max(0,sub(s[9],8)))) add(mul(1,max(0,sub(16,s[10]))),mul(1,max(0,sub(s[10],16)))) add(mul(1,max(0,sub(30,s[11]))),mul(0,max(0,sub(s[11],30)))) add(mul(3,max(0,sub(15,s[12]))),mul(3,max(0,sub(s[12],15)))) add(mul(5,max(0,sub(16,s[13]))),mul(5,max(0,sub(s[13],16)))) add(mul(1,max(0,sub(18,s[14]))),mul(4,max(0,sub(s[14],18)))) add(mul(5,max(0,sub(32,s[15]))),mul(2,max(0,sub(s[15],32)))) add(mul(4,max(0,sub(30,s[16]))),mul(1,max(0,sub(s[16],30)))) add(mul(5,max(0,sub(21,s[17]))),mul(5,max(0,sub(s[17],21)))) add(mul(3,max(0,sub(32,s[18]))),mul(0,max(0,sub(s[18],32)))) add(mul(4,max(0,sub(30,s[19]))),mul(2,max(0,sub(s[19],30)))) add(mul(3,max(0,sub(32,s[20]))),mul(4,max(0,sub(s[20],32)))) add(mul(2,max(0,sub(41,s[21]))),mul(2,max(0,sub(s[21],41)))) add(mul(4,max(0,sub(41,s[22]))),mul(3,max(0,sub(s[22],41)))) add(mul(2,max(0,sub(28,s[23]))),mul(0,max(0,sub(s[23],28)))) add(mul(4,max(0,sub(30,s[24]))),mul(5,max(0,sub(s[24],30)))) add(mul(2,max(0,sub(44,s[25]))),mul(1,max(0,sub(s[25],44)))) add(mul(5,max(0,sub(49,s[26]))),mul(4,max(0,sub(s[26],49)))) add(mul(5,max(0,sub(43,s[27]))),mul(1,max(0,sub(s[27],43)))) add(mul(5,max(0,sub(51,s[28]))),mul(3,max(0,sub(s[28],51)))) add(mul(1,max(0,sub(44,s[29]))),mul(3,max(0,sub(s[29],44)))) add(mul(0,max(0,sub(50,s[30]))),mul(4,max(0,sub(s[30],50)))) add(mul(5,max(0,sub(58,s[31]))),mul(4,max(0,sub(s[31],58)))) </minimize>
  </objectives>
</instance>
