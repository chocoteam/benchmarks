<instance format="XCSP3" type="COP">
  <variables>
    <array id="xk" size="[8]"> 0..24 </array>
    <array id="yk" size="[8]"> 0..11 </array>
    <array id="xr" size="[14]"> 0..24 </array>
    <array id="yr" size="[14]"> 0..11 </array>
    <array id="left" note="left[i] is the pillar supporting the ith plank on the left" size="[8]"> 0..13 </array>
    <array id="right" note="right[i] is the pillar supporting the ith plank on the right" size="[8]"> 0..13 </array>
    <array id="support" note="support[j] is the plank where is sit the jth pillar (or nPlanks if none)" size="[14]"> 0..8 </array>
    <var id="xka"> 0 </var>
    <var id="yka"> -1 </var>
    <array id="aux_gb" note="aux_gb[i] is the ith auxiliary variable having been automatically introduced" size="[114]">
      <domain for="aux_gb[0] aux_gb[2] aux_gb[4] aux_gb[6] aux_gb[8] aux_gb[10] aux_gb[12] aux_gb[14] aux_gb[40] aux_gb[42] aux_gb[44] aux_gb[46] aux_gb[48] aux_gb[50] aux_gb[52] aux_gb[54] aux_gb[72] aux_gb[74] aux_gb[76] aux_gb[78] aux_gb[80] aux_gb[82] aux_gb[84] aux_gb[86] aux_gb[88] aux_gb[90] aux_gb[92] aux_gb[94] aux_gb[96] aux_gb[98]"> 0..24 </domain>
      <domain for="aux_gb[1] aux_gb[3] aux_gb[5] aux_gb[7] aux_gb[9] aux_gb[11] aux_gb[13] aux_gb[15] aux_gb[41] aux_gb[43] aux_gb[45] aux_gb[47] aux_gb[49] aux_gb[51] aux_gb[53] aux_gb[55]"> 1 2 </domain>
      <domain for="aux_gb[16] aux_gb[18] aux_gb[20] aux_gb[22] aux_gb[24] aux_gb[26] aux_gb[28] aux_gb[30] aux_gb[56] aux_gb[58] aux_gb[60] aux_gb[62] aux_gb[64] aux_gb[66] aux_gb[68] aux_gb[70]"> 0..11 </domain>
      <domain for="aux_gb[17] aux_gb[19] aux_gb[21] aux_gb[23] aux_gb[25] aux_gb[27] aux_gb[29] aux_gb[31] aux_gb[57] aux_gb[59] aux_gb[61] aux_gb[63] aux_gb[65] aux_gb[67] aux_gb[69] aux_gb[71]"> 1..4 </domain>
      <domain for="aux_gb[32]"> 3..27 </domain>
      <domain for="aux_gb[33]"> 14..38 </domain>
      <domain for="aux_gb[34]"> 13..37 </domain>
      <domain for="aux_gb[35]"> 4..28 </domain>
      <domain for="aux_gb[36]"> 1..25 </domain>
      <domain for="aux_gb[37] aux_gb[38]"> 8..32 </domain>
      <domain for="aux_gb[39]"> 7..31 </domain>
      <domain for="aux_gb[73] aux_gb[75] aux_gb[77] aux_gb[79] aux_gb[81] aux_gb[83] aux_gb[85] aux_gb[87] aux_gb[89] aux_gb[91] aux_gb[93] aux_gb[95] aux_gb[97] aux_gb[99]"> 2..25 </domain>
      <domain for="aux_gb[100..113]"> -1..11 </domain>
    </array>
  </variables>
  <constraints>
    <group>
      <intension> le(add(%0,%1),25) </intension>
      <args> xk[0] 4 </args>
      <args> xk[1] 15 </args>
      <args> xk[2] 14 </args>
      <args> xk[3] 5 </args>
      <args> xk[4] 2 </args>
      <args> xk[5] 9 </args>
      <args> xk[6] 9 </args>
      <args> xk[7] 8 </args>
    </group>
    <group>
      <intension> le(add(%0,%1),25) </intension>
      <args> xr[0] 1 </args>
      <args> xr[1] 1 </args>
      <args> xr[2] 2 </args>
      <args> xr[3] 1 </args>
      <args> xr[4] 1 </args>
      <args> xr[5] 1 </args>
      <args> xr[6] 2 </args>
      <args> xr[7] 1 </args>
      <args> xr[8] 2 </args>
      <args> xr[9] 1 </args>
      <args> xr[10] 1 </args>
      <args> xr[11] 2 </args>
      <args> xr[12] 2 </args>
      <args> xr[13] 2 </args>
    </group>
    <group>
      <intension> le(add(%0,%1),12) </intension>
      <args> yr[0] 4 </args>
      <args> yr[1] 3 </args>
      <args> yr[2] 3 </args>
      <args> yr[3] 4 </args>
      <args> yr[4] 1 </args>
      <args> yr[5] 4 </args>
      <args> yr[6] 1 </args>
      <args> yr[7] 4 </args>
      <args> yr[8] 1 </args>
      <args> yr[9] 3 </args>
      <args> yr[10] 4 </args>
      <args> yr[11] 3 </args>
      <args> yr[12] 4 </args>
      <args> yr[13] 3 </args>
    </group>
    <group class="symmetry-breaking">
      <intension> or(gt(%0,%1),ne(%0,%1),lt(%2,%3)) </intension>
      <args> yk[5] yk[6] xk[5] xk[6] </args>
      <args> yr[0] yr[3] xr[0] xr[3] </args>
      <args> yr[0] yr[5] xr[0] xr[5] </args>
      <args> yr[0] yr[7] xr[0] xr[7] </args>
      <args> yr[0] yr[10] xr[0] xr[10] </args>
      <args> yr[1] yr[9] xr[1] xr[9] </args>
      <args> yr[2] yr[11] xr[2] xr[11] </args>
      <args> yr[2] yr[13] xr[2] xr[13] </args>
      <args> yr[3] yr[5] xr[3] xr[5] </args>
      <args> yr[3] yr[7] xr[3] xr[7] </args>
      <args> yr[3] yr[10] xr[3] xr[10] </args>
      <args> yr[5] yr[7] xr[5] xr[7] </args>
      <args> yr[5] yr[10] xr[5] xr[10] </args>
      <args> yr[6] yr[8] xr[6] xr[8] </args>
      <args> yr[7] yr[10] xr[7] xr[10] </args>
      <args> yr[11] yr[13] xr[11] xr[13] </args>
    </group>
    <noOverlap>
      <origins> (xk[0],yk[0])(xk[1],yk[1])(xk[2],yk[2])(xk[3],yk[3])(xk[4],yk[4])(xk[5],yk[5])(xk[6],yk[6])(xk[7],yk[7])(xr[0],yr[0])(xr[1],yr[1])(xr[2],yr[2])(xr[3],yr[3])(xr[4],yr[4])(xr[5],yr[5])(xr[6],yr[6])(xr[7],yr[7])(xr[8],yr[8])(xr[9],yr[9])(xr[10],yr[10])(xr[11],yr[11])(xr[12],yr[12])(xr[13],yr[13]) </origins>
      <lengths> (4,1)(15,1)(14,1)(5,1)(2,1)(9,1)(9,1)(8,1)(1,4)(1,3)(2,3)(1,4)(1,1)(1,4)(2,1)(1,4)(2,1)(1,3)(1,4)(2,3)(2,4)(2,3) </lengths>
    </noOverlap>
    <block note="each plank is supported at both ends by a pillar">
      <group>
        <element>
          <list> xr[] </list>
          <index> %0 </index>
          <condition> (le,%1) </condition>
        </element>
        <args> left[0] xk[0] </args>
        <args> left[1] xk[1] </args>
        <args> left[2] xk[2] </args>
        <args> left[3] xk[3] </args>
        <args> left[4] xk[4] </args>
        <args> left[5] xk[5] </args>
        <args> left[6] xk[6] </args>
        <args> left[7] xk[7] </args>
        <args> right[0] aux_gb[32] </args>
        <args> right[1] aux_gb[33] </args>
        <args> right[2] aux_gb[34] </args>
        <args> right[3] aux_gb[35] </args>
        <args> right[4] aux_gb[36] </args>
        <args> right[5] aux_gb[37] </args>
        <args> right[6] aux_gb[38] </args>
        <args> right[7] aux_gb[39] </args>
      </group>
      <group>
        <intension> gt(add(%0,%1),%2) </intension>
        <args> aux_gb[0] aux_gb[1] xk[0] </args>
        <args> aux_gb[2] aux_gb[3] xk[1] </args>
        <args> aux_gb[4] aux_gb[5] xk[2] </args>
        <args> aux_gb[6] aux_gb[7] xk[3] </args>
        <args> aux_gb[8] aux_gb[9] xk[4] </args>
        <args> aux_gb[10] aux_gb[11] xk[5] </args>
        <args> aux_gb[12] aux_gb[13] xk[6] </args>
        <args> aux_gb[14] aux_gb[15] xk[7] </args>
      </group>
      <group>
        <intension> eq(%0,add(%1,%2)) </intension>
        <args> yk[0] aux_gb[16] aux_gb[17] </args>
        <args> yk[1] aux_gb[18] aux_gb[19] </args>
        <args> yk[2] aux_gb[20] aux_gb[21] </args>
        <args> yk[3] aux_gb[22] aux_gb[23] </args>
        <args> yk[4] aux_gb[24] aux_gb[25] </args>
        <args> yk[5] aux_gb[26] aux_gb[27] </args>
        <args> yk[6] aux_gb[28] aux_gb[29] </args>
        <args> yk[7] aux_gb[30] aux_gb[31] </args>
        <args> yk[0] aux_gb[56] aux_gb[57] </args>
        <args> yk[1] aux_gb[58] aux_gb[59] </args>
        <args> yk[2] aux_gb[60] aux_gb[61] </args>
        <args> yk[3] aux_gb[62] aux_gb[63] </args>
        <args> yk[4] aux_gb[64] aux_gb[65] </args>
        <args> yk[5] aux_gb[66] aux_gb[67] </args>
        <args> yk[6] aux_gb[68] aux_gb[69] </args>
        <args> yk[7] aux_gb[70] aux_gb[71] </args>
      </group>
      <group>
        <intension> gt(add(%0,%1),sub(add(%2,%3),1)) </intension>
        <args> aux_gb[40] aux_gb[41] xk[0] 4 </args>
        <args> aux_gb[42] aux_gb[43] xk[1] 15 </args>
        <args> aux_gb[44] aux_gb[45] xk[2] 14 </args>
        <args> aux_gb[46] aux_gb[47] xk[3] 5 </args>
        <args> aux_gb[48] aux_gb[49] xk[4] 2 </args>
        <args> aux_gb[50] aux_gb[51] xk[5] 9 </args>
        <args> aux_gb[52] aux_gb[53] xk[6] 9 </args>
        <args> aux_gb[54] aux_gb[55] xk[7] 8 </args>
      </group>
    </block>
    <block note="each pillar sits on exactly one plank">
      <group>
        <element>
          <list> xk[] xka </list>
          <index> %0 </index>
          <condition> (le,%1) </condition>
        </element>
        <args> support[0] xr[0] </args>
        <args> support[1] xr[1] </args>
        <args> support[2] xr[2] </args>
        <args> support[3] xr[3] </args>
        <args> support[4] xr[4] </args>
        <args> support[5] xr[5] </args>
        <args> support[6] xr[6] </args>
        <args> support[7] xr[7] </args>
        <args> support[8] xr[8] </args>
        <args> support[9] xr[9] </args>
        <args> support[10] xr[10] </args>
        <args> support[11] xr[11] </args>
        <args> support[12] xr[12] </args>
        <args> support[13] xr[13] </args>
      </group>
      <group>
        <intension> le(add(%0,%1),add(%2,%3)) </intension>
        <args> xr[0] 1 aux_gb[72] aux_gb[73] </args>
        <args> xr[1] 1 aux_gb[74] aux_gb[75] </args>
        <args> xr[2] 2 aux_gb[76] aux_gb[77] </args>
        <args> xr[3] 1 aux_gb[78] aux_gb[79] </args>
        <args> xr[4] 1 aux_gb[80] aux_gb[81] </args>
        <args> xr[5] 1 aux_gb[82] aux_gb[83] </args>
        <args> xr[6] 2 aux_gb[84] aux_gb[85] </args>
        <args> xr[7] 1 aux_gb[86] aux_gb[87] </args>
        <args> xr[8] 2 aux_gb[88] aux_gb[89] </args>
        <args> xr[9] 1 aux_gb[90] aux_gb[91] </args>
        <args> xr[10] 1 aux_gb[92] aux_gb[93] </args>
        <args> xr[11] 2 aux_gb[94] aux_gb[95] </args>
        <args> xr[12] 2 aux_gb[96] aux_gb[97] </args>
        <args> xr[13] 2 aux_gb[98] aux_gb[99] </args>
      </group>
      <group>
        <intension> eq(%0,add(%1,1)) </intension>
        <args> yr[0] aux_gb[100] </args>
        <args> yr[1] aux_gb[101] </args>
        <args> yr[2] aux_gb[102] </args>
        <args> yr[3] aux_gb[103] </args>
        <args> yr[4] aux_gb[104] </args>
        <args> yr[5] aux_gb[105] </args>
        <args> yr[6] aux_gb[106] </args>
        <args> yr[7] aux_gb[107] </args>
        <args> yr[8] aux_gb[108] </args>
        <args> yr[9] aux_gb[109] </args>
        <args> yr[10] aux_gb[110] </args>
        <args> yr[11] aux_gb[111] </args>
        <args> yr[12] aux_gb[112] </args>
        <args> yr[13] aux_gb[113] </args>
      </group>
    </block>
    <group>
      <element>
        <list> %... </list>
        <index> left[0] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[0] xr[] </args>
      <args> aux_gb[1] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[16] yr[] </args>
      <args> aux_gb[17] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[1] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[2] xr[] </args>
      <args> aux_gb[3] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[18] yr[] </args>
      <args> aux_gb[19] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[2] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[4] xr[] </args>
      <args> aux_gb[5] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[20] yr[] </args>
      <args> aux_gb[21] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[3] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[6] xr[] </args>
      <args> aux_gb[7] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[22] yr[] </args>
      <args> aux_gb[23] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[4] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[8] xr[] </args>
      <args> aux_gb[9] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[24] yr[] </args>
      <args> aux_gb[25] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[5] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[10] xr[] </args>
      <args> aux_gb[11] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[26] yr[] </args>
      <args> aux_gb[27] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[6] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[12] xr[] </args>
      <args> aux_gb[13] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[28] yr[] </args>
      <args> aux_gb[29] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> left[7] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[14] xr[] </args>
      <args> aux_gb[15] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[30] yr[] </args>
      <args> aux_gb[31] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <intension> eq(sub(add(%0,%1),1),%2) </intension>
      <args> xk[0] 4 aux_gb[32] </args>
      <args> xk[1] 15 aux_gb[33] </args>
      <args> xk[2] 14 aux_gb[34] </args>
      <args> xk[3] 5 aux_gb[35] </args>
      <args> xk[4] 2 aux_gb[36] </args>
      <args> xk[5] 9 aux_gb[37] </args>
      <args> xk[6] 9 aux_gb[38] </args>
      <args> xk[7] 8 aux_gb[39] </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[0] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[40] xr[] </args>
      <args> aux_gb[41] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[56] yr[] </args>
      <args> aux_gb[57] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[1] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[42] xr[] </args>
      <args> aux_gb[43] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[58] yr[] </args>
      <args> aux_gb[59] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[2] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[44] xr[] </args>
      <args> aux_gb[45] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[60] yr[] </args>
      <args> aux_gb[61] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[3] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[46] xr[] </args>
      <args> aux_gb[47] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[62] yr[] </args>
      <args> aux_gb[63] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[4] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[48] xr[] </args>
      <args> aux_gb[49] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[64] yr[] </args>
      <args> aux_gb[65] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[5] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[50] xr[] </args>
      <args> aux_gb[51] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[66] yr[] </args>
      <args> aux_gb[67] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[6] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[52] xr[] </args>
      <args> aux_gb[53] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[68] yr[] </args>
      <args> aux_gb[69] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> right[7] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[54] xr[] </args>
      <args> aux_gb[55] 1 1 2 1 1 1 2 1 2 1 1 2 2 2 </args>
      <args> aux_gb[70] yr[] </args>
      <args> aux_gb[71] 4 3 3 4 1 4 1 4 1 3 4 3 4 3 </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[0] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[72] xk[] xka </args>
      <args> aux_gb[73] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[100] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[1] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[74] xk[] xka </args>
      <args> aux_gb[75] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[101] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[2] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[76] xk[] xka </args>
      <args> aux_gb[77] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[102] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[3] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[78] xk[] xka </args>
      <args> aux_gb[79] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[103] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[4] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[80] xk[] xka </args>
      <args> aux_gb[81] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[104] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[5] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[82] xk[] xka </args>
      <args> aux_gb[83] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[105] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[6] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[84] xk[] xka </args>
      <args> aux_gb[85] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[106] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[7] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[86] xk[] xka </args>
      <args> aux_gb[87] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[107] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[8] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[88] xk[] xka </args>
      <args> aux_gb[89] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[108] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[9] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[90] xk[] xka </args>
      <args> aux_gb[91] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[109] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[10] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[92] xk[] xka </args>
      <args> aux_gb[93] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[110] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[11] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[94] xk[] xka </args>
      <args> aux_gb[95] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[111] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[12] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[96] xk[] xka </args>
      <args> aux_gb[97] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[112] yk[] yka </args>
    </group>
    <group>
      <element>
        <list> %... </list>
        <index> support[13] </index>
        <value> %0 </value>
      </element>
      <args> aux_gb[98] xk[] xka </args>
      <args> aux_gb[99] 4 15 14 5 2 9 9 8 25 </args>
      <args> aux_gb[113] yk[] yka </args>
    </group>
  </constraints>
  <objectives>
    <minimize type="maximum"> add(yk[0],1) add(yk[1],1) add(yk[2],1) add(yk[3],1) add(yk[4],1) add(yk[5],1) add(yk[6],1) add(yk[7],1) add(yr[0],4) add(yr[1],3) add(yr[2],3) add(yr[3],4) add(yr[4],1) add(yr[5],4) add(yr[6],1) add(yr[7],4) add(yr[8],1) add(yr[9],3) add(yr[10],4) add(yr[11],3) add(yr[12],4) add(yr[13],3) </minimize>
  </objectives>
</instance>
