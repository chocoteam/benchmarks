<instance format="XCSP3" type="COP">
  <variables>
    <array id="x" note="x[i] is the community of the ith node" size="[25]"> 0..2 </array>
    <var id="z"> 0..31383 </var>
  </variables>
  <constraints>
    <group note="considering nodes that must belong to the same community">
      <intension> eq(%0,%1) </intension>
      <args> x[13] x[2] </args>
      <args> x[19] x[20] </args>
      <args> x[10] x[2] </args>
      <args> x[1] x[2] </args>
      <args> x[19] x[5] </args>
    </group>
    <group note="considering nodes that must not belong to the same community">
      <intension> ne(%0,%1) </intension>
      <args> x[22] x[10] </args>
      <args> x[3] x[23] </args>
      <args> x[7] x[9] </args>
      <args> x[8] x[5] </args>
      <args> x[14] x[7] </args>
    </group>
    <precedence class="symmetry-breaking"> x[] </precedence>
    <sum>
      <list> eq(x[1],x[0]) eq(x[2],x[0]) eq(x[2],x[1]) eq(x[3],x[0]) eq(x[3],x[1]) eq(x[3],x[2]) eq(x[4],x[0]) eq(x[4],x[1]) eq(x[4],x[2]) eq(x[4],x[3]) eq(x[5],x[0]) eq(x[5],x[1]) eq(x[5],x[2]) eq(x[5],x[3]) eq(x[5],x[4]) eq(x[6],x[0]) eq(x[6],x[1]) eq(x[6],x[2]) eq(x[6],x[3]) eq(x[6],x[4]) eq(x[6],x[5]) eq(x[7],x[0]) eq(x[7],x[1]) eq(x[7],x[2]) eq(x[7],x[3]) eq(x[7],x[4]) eq(x[7],x[5]) eq(x[7],x[6]) eq(x[8],x[0]) eq(x[8],x[1]) eq(x[8],x[2]) eq(x[8],x[3]) eq(x[8],x[4]) eq(x[8],x[5]) eq(x[8],x[6]) eq(x[8],x[7]) eq(x[9],x[0]) eq(x[9],x[1]) eq(x[9],x[2]) eq(x[9],x[3]) eq(x[9],x[4]) eq(x[9],x[5]) eq(x[9],x[6]) eq(x[9],x[7]) eq(x[9],x[8]) eq(x[10],x[0]) eq(x[10],x[1]) eq(x[10],x[2]) eq(x[10],x[3]) eq(x[10],x[4]) eq(x[10],x[5]) eq(x[10],x[6]) eq(x[10],x[7]) eq(x[10],x[8]) eq(x[10],x[9]) eq(x[11],x[0]) eq(x[11],x[1]) eq(x[11],x[2]) eq(x[11],x[3]) eq(x[11],x[4]) eq(x[11],x[5]) eq(x[11],x[6]) eq(x[11],x[7]) eq(x[11],x[8]) eq(x[11],x[9]) eq(x[11],x[10]) eq(x[12],x[0]) eq(x[12],x[1]) eq(x[12],x[2]) eq(x[12],x[3]) eq(x[12],x[4]) eq(x[12],x[5]) eq(x[12],x[6]) eq(x[12],x[7]) eq(x[12],x[8]) eq(x[12],x[9]) eq(x[12],x[10]) eq(x[12],x[11]) eq(x[13],x[0]) eq(x[13],x[1]) eq(x[13],x[2]) eq(x[13],x[3]) eq(x[13],x[4]) eq(x[13],x[5]) eq(x[13],x[6]) eq(x[13],x[7]) eq(x[13],x[8]) eq(x[13],x[9]) eq(x[13],x[10]) eq(x[13],x[11]) eq(x[13],x[12]) eq(x[14],x[0]) eq(x[14],x[1]) eq(x[14],x[2]) eq(x[14],x[3]) eq(x[14],x[4]) eq(x[14],x[5]) eq(x[14],x[6]) eq(x[14],x[7]) eq(x[14],x[8]) eq(x[14],x[9]) eq(x[14],x[10]) eq(x[14],x[11]) eq(x[14],x[12]) eq(x[14],x[13]) eq(x[15],x[0]) eq(x[15],x[1]) eq(x[15],x[2]) eq(x[15],x[3]) eq(x[15],x[4]) eq(x[15],x[5]) eq(x[15],x[6]) eq(x[15],x[7]) eq(x[15],x[8]) eq(x[15],x[9]) eq(x[15],x[10]) eq(x[15],x[11]) eq(x[15],x[12]) eq(x[15],x[13]) eq(x[15],x[14]) eq(x[16],x[0]) eq(x[16],x[1]) eq(x[16],x[2]) eq(x[16],x[3]) eq(x[16],x[4]) eq(x[16],x[5]) eq(x[16],x[6]) eq(x[16],x[7]) eq(x[16],x[8]) eq(x[16],x[9]) eq(x[16],x[10]) eq(x[16],x[11]) eq(x[16],x[12]) eq(x[16],x[13]) eq(x[16],x[14]) eq(x[16],x[15]) eq(x[17],x[0]) eq(x[17],x[1]) eq(x[17],x[2]) eq(x[17],x[3]) eq(x[17],x[4]) eq(x[17],x[5]) eq(x[17],x[6]) eq(x[17],x[7]) eq(x[17],x[8]) eq(x[17],x[9]) eq(x[17],x[10]) eq(x[17],x[11]) eq(x[17],x[12]) eq(x[17],x[13]) eq(x[17],x[14]) eq(x[17],x[15]) eq(x[17],x[16]) eq(x[18],x[0]) eq(x[18],x[1]) eq(x[18],x[2]) eq(x[18],x[3]) eq(x[18],x[4]) eq(x[18],x[5]) eq(x[18],x[6]) eq(x[18],x[7]) eq(x[18],x[8]) eq(x[18],x[9]) eq(x[18],x[10]) eq(x[18],x[11]) eq(x[18],x[12]) eq(x[18],x[13]) eq(x[18],x[14]) eq(x[18],x[15]) eq(x[18],x[16]) eq(x[18],x[17]) eq(x[19],x[0]) eq(x[19],x[1]) eq(x[19],x[2]) eq(x[19],x[3]) eq(x[19],x[4]) eq(x[19],x[5]) eq(x[19],x[6]) eq(x[19],x[7]) eq(x[19],x[8]) eq(x[19],x[9]) eq(x[19],x[10]) eq(x[19],x[11]) eq(x[19],x[12]) eq(x[19],x[13]) eq(x[19],x[14]) eq(x[19],x[15]) eq(x[19],x[16]) eq(x[19],x[17]) eq(x[19],x[18]) eq(x[20],x[0]) eq(x[20],x[1]) eq(x[20],x[2]) eq(x[20],x[3]) eq(x[20],x[4]) eq(x[20],x[5]) eq(x[20],x[6]) eq(x[20],x[7]) eq(x[20],x[8]) eq(x[20],x[9]) eq(x[20],x[10]) eq(x[20],x[11]) eq(x[20],x[12]) eq(x[20],x[13]) eq(x[20],x[14]) eq(x[20],x[15]) eq(x[20],x[16]) eq(x[20],x[17]) eq(x[20],x[18]) eq(x[20],x[19]) eq(x[21],x[0]) eq(x[21],x[1]) eq(x[21],x[2]) eq(x[21],x[3]) eq(x[21],x[4]) eq(x[21],x[5]) eq(x[21],x[6]) eq(x[21],x[7]) eq(x[21],x[8]) eq(x[21],x[9]) eq(x[21],x[10]) eq(x[21],x[11]) eq(x[21],x[12]) eq(x[21],x[13]) eq(x[21],x[14]) eq(x[21],x[15]) eq(x[21],x[16]) eq(x[21],x[17]) eq(x[21],x[18]) eq(x[21],x[19]) eq(x[21],x[20]) eq(x[22],x[0]) eq(x[22],x[1]) eq(x[22],x[2]) eq(x[22],x[3]) eq(x[22],x[4]) eq(x[22],x[5]) eq(x[22],x[6]) eq(x[22],x[7]) eq(x[22],x[8]) eq(x[22],x[9]) eq(x[22],x[10]) eq(x[22],x[11]) eq(x[22],x[12]) eq(x[22],x[13]) eq(x[22],x[14]) eq(x[22],x[15]) eq(x[22],x[16]) eq(x[22],x[17]) eq(x[22],x[18]) eq(x[22],x[19]) eq(x[22],x[20]) eq(x[22],x[21]) eq(x[23],x[0]) eq(x[23],x[1]) eq(x[23],x[2]) eq(x[23],x[3]) eq(x[23],x[4]) eq(x[23],x[5]) eq(x[23],x[6]) eq(x[23],x[7]) eq(x[23],x[8]) eq(x[23],x[9]) eq(x[23],x[10]) eq(x[23],x[11]) eq(x[23],x[12]) eq(x[23],x[13]) eq(x[23],x[14]) eq(x[23],x[15]) eq(x[23],x[16]) eq(x[23],x[17]) eq(x[23],x[18]) eq(x[23],x[19]) eq(x[23],x[20]) eq(x[23],x[21]) eq(x[23],x[22]) eq(x[24],x[0]) eq(x[24],x[1]) eq(x[24],x[2]) eq(x[24],x[3]) eq(x[24],x[4]) eq(x[24],x[5]) eq(x[24],x[6]) eq(x[24],x[7]) eq(x[24],x[8]) eq(x[24],x[9]) eq(x[24],x[10]) eq(x[24],x[11]) eq(x[24],x[12]) eq(x[24],x[13]) eq(x[24],x[14]) eq(x[24],x[15]) eq(x[24],x[16]) eq(x[24],x[17]) eq(x[24],x[18]) eq(x[24],x[19]) eq(x[24],x[20]) eq(x[24],x[21]) eq(x[24],x[22]) eq(x[24],x[23]) </list>
      <coeffs> -870 8261 -580 -1739 -580 -1159 6957 -1014 7971 -2029 -3043 -1014 -2029 -2029 -3551 -2609 -870 -1739 -1739 -3043 -3043 -1739 -580 -1159 -1159 -2029 7971 -1739 -870 -290 -580 -580 -1014 -1014 -870 -580 7826 9275 -1449 -1449 7464 -2536 -2174 -1449 -725 -4348 -1449 7101 7101 4928 4928 -4348 -2899 8551 6377 -1304 9565 -870 9130 -1522 -1522 -1304 -870 -435 -1087 -2174 6522 -1159 -2319 -2319 -4058 -4058 6522 -2319 8841 -2899 -5797 -1739 -1739 -580 -1159 8841 7971 -2029 -1739 -1159 -580 -1449 7101 -870 -2319 7826 -725 -1449 -1449 7464 -2536 -2174 -1449 -725 -1812 -3623 -1087 -2899 -1449 6087 -1304 7391 7391 5435 -4565 -3913 -2609 -1304 -3261 -6522 -1957 -5217 7391 6739 -1739 -580 -1159 -1159 -2029 -2029 -1739 -1159 -580 8551 -2899 -870 -2319 -1159 8551 -2609 -2609 -870 -1739 -1739 -3043 -3043 -2609 -1739 -870 -2174 5652 8696 -3478 -1739 7826 6087 -1739 -3478 -1159 -2319 -2319 -4058 5942 6522 -2319 -1159 -2899 -5797 -1739 5362 -2319 -2899 4783 7681 -3478 -2609 -870 -1739 -1739 -3043 -3043 -2609 8261 -870 -2174 5652 -1304 6522 -1739 -2174 -3913 8261 -2609 -3478 -2174 -725 -1449 -1449 -2536 7464 7826 -1449 -725 -1812 -3623 -1087 -2899 -1449 -1812 -3261 -1449 7826 7101 -2174 -3043 -1014 -2029 -2029 -3551 6449 6957 -2029 -1014 -2536 4928 -1522 5942 -2029 -2536 -4565 -2029 -3043 5942 -3043 7464 -3043 -1014 -2029 -2029 -3551 6449 6957 -2029 -1014 -2536 -5072 -1522 5942 -2029 -2536 5435 -2029 6957 5942 -3043 -2536 6449 -1304 -435 -870 -870 -1522 -1522 -1304 9130 -435 -1087 -2174 -652 -1739 -870 -1087 -1957 -870 -1304 -1739 8696 -1087 -1522 -1522 -2609 -870 -1739 -1739 -3043 6957 7391 8261 -870 -2174 -4348 -1304 6522 -1739 -2174 -3913 -1739 -2609 -3478 7391 -2174 -3043 -3043 8696 </coeffs>
      <condition> (eq,z) </condition>
    </sum>
  </constraints>
  <objectives>
    <maximize> add(mul(2,z),-62756) </maximize>
  </objectives>
</instance>
