predicate fzn_diffn(array [int] of var int: x,array [int] of var int: y,array [int] of var int: dx,array [int] of var int: dy);
predicate array_int_maximum(var int: m,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_59_ = [1,-1];
array [1..12] of int: X_INTRODUCED_87_ = [1,1,1,1,1,1,1,1,1,1,1,1];
array [1..16] of int: X_INTRODUCED_90_ = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2];
array [1..16] of int: X_INTRODUCED_91_ = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 0..100: X_INTRODUCED_0_;
var 0..100: X_INTRODUCED_1_;
var 0..100: X_INTRODUCED_2_;
var 0..100: X_INTRODUCED_3_;
var 0..100: X_INTRODUCED_4_;
var 0..100: X_INTRODUCED_5_;
var 0..100: X_INTRODUCED_6_;
var 0..100: X_INTRODUCED_7_;
var 0..100: X_INTRODUCED_8_;
var 0..100: X_INTRODUCED_9_;
var 0..100: X_INTRODUCED_10_;
var 0..100: X_INTRODUCED_11_;
var 0..100: X_INTRODUCED_12_;
var 0..100: X_INTRODUCED_13_;
var 0..100: X_INTRODUCED_14_;
var 0..100: X_INTRODUCED_15_;
var 0..100: X_INTRODUCED_16_;
var 0..100: X_INTRODUCED_17_;
var 0..100: X_INTRODUCED_18_;
var 0..100: X_INTRODUCED_19_;
var 0..100: X_INTRODUCED_20_;
var 0..100: X_INTRODUCED_21_;
var 0..100: X_INTRODUCED_22_;
var 0..100: X_INTRODUCED_23_;
var 0..100: X_INTRODUCED_24_;
var 0..100: X_INTRODUCED_25_;
var 0..100: X_INTRODUCED_26_;
var 0..100: X_INTRODUCED_27_;
var 1..3: X_INTRODUCED_28_;
var 1..3: X_INTRODUCED_29_;
var 1..3: X_INTRODUCED_30_;
var 1..3: X_INTRODUCED_31_;
var 1..3: X_INTRODUCED_32_;
var 1..3: X_INTRODUCED_33_;
var 1..3: X_INTRODUCED_34_;
var 1..3: X_INTRODUCED_35_;
var 1..3: X_INTRODUCED_42_;
var 1..3: X_INTRODUCED_43_;
var 1..3: X_INTRODUCED_44_;
var 1..3: X_INTRODUCED_45_;
var 1..3: X_INTRODUCED_48_;
var 1..3: X_INTRODUCED_49_;
var 1..3: X_INTRODUCED_50_;
var 1..3: X_INTRODUCED_51_;
var 0..1000: objective:: output_var;
var 1..101: X_INTRODUCED_71_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_72_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_92_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_93_ ::var_is_introduced :: is_defined_var;
array [1..28] of var int: t:: output_array([1..28]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_];
array [1..28] of var int: r:: output_array([1..28]) = [X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_,1,1,1,1,1,1,X_INTRODUCED_42_,X_INTRODUCED_43_,X_INTRODUCED_44_,X_INTRODUCED_45_,1,1,X_INTRODUCED_48_,X_INTRODUCED_49_,X_INTRODUCED_50_,X_INTRODUCED_51_,1,1,1,1];
array [1..12] of var int: X_INTRODUCED_85_ ::var_is_introduced  = [X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_];
array [1..12] of var int: X_INTRODUCED_86_ ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1];
array [1..16] of var int: X_INTRODUCED_88_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_];
array [1..16] of var int: X_INTRODUCED_89_ ::var_is_introduced  = [X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_,X_INTRODUCED_34_,X_INTRODUCED_35_,X_INTRODUCED_42_,X_INTRODUCED_43_,X_INTRODUCED_44_,X_INTRODUCED_45_,X_INTRODUCED_48_,X_INTRODUCED_49_,X_INTRODUCED_50_,X_INTRODUCED_51_];
array [1..4] of var int: X_INTRODUCED_94_ ::var_is_introduced  = [X_INTRODUCED_71_,X_INTRODUCED_72_,X_INTRODUCED_92_,X_INTRODUCED_93_];
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_0_,X_INTRODUCED_8_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_1_,X_INTRODUCED_8_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_2_,X_INTRODUCED_9_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_3_,X_INTRODUCED_9_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_4_,X_INTRODUCED_10_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_5_,X_INTRODUCED_10_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_6_,X_INTRODUCED_11_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_7_,X_INTRODUCED_11_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_8_,X_INTRODUCED_26_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_9_,X_INTRODUCED_27_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_10_,X_INTRODUCED_12_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_11_,X_INTRODUCED_13_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_12_,X_INTRODUCED_15_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_12_,X_INTRODUCED_16_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_13_,X_INTRODUCED_14_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_13_,X_INTRODUCED_17_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_14_,X_INTRODUCED_18_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_15_,X_INTRODUCED_18_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_16_,X_INTRODUCED_19_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_17_,X_INTRODUCED_19_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_18_,X_INTRODUCED_21_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_18_,X_INTRODUCED_22_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_19_,X_INTRODUCED_20_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_19_,X_INTRODUCED_23_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_20_,X_INTRODUCED_24_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_21_,X_INTRODUCED_24_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_22_,X_INTRODUCED_25_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_23_,X_INTRODUCED_25_],-2);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_24_,X_INTRODUCED_26_],-1);
constraint int_lin_le(X_INTRODUCED_59_,[X_INTRODUCED_25_,X_INTRODUCED_27_],-1);
constraint fzn_diffn(X_INTRODUCED_85_,X_INTRODUCED_86_,X_INTRODUCED_87_,X_INTRODUCED_87_);
constraint fzn_diffn(X_INTRODUCED_88_,X_INTRODUCED_89_,X_INTRODUCED_90_,X_INTRODUCED_91_);
constraint array_int_maximum(objective,X_INTRODUCED_94_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_12_,X_INTRODUCED_71_],-1):: defines_var(X_INTRODUCED_71_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_13_,X_INTRODUCED_72_],-1):: defines_var(X_INTRODUCED_72_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_26_,X_INTRODUCED_92_],-1):: defines_var(X_INTRODUCED_92_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_27_,X_INTRODUCED_93_],-1):: defines_var(X_INTRODUCED_93_);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize objective;
