predicate fzn_diffn(array [int] of var int: x,array [int] of var int: y,array [int] of var int: dx,array [int] of var int: dy);
predicate array_int_maximum(var int: m,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_49_ = [1,-1];
array [1..15] of int: X_INTRODUCED_73_ = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of int: X_INTRODUCED_74_ = [2,2,2,2,2,2,2,2];
array [1..8] of int: X_INTRODUCED_75_ = [1,1,1,1,1,1,1,1];
var 0..100: X_INTRODUCED_0_;
var 0..100: X_INTRODUCED_1_;
var 0..100: X_INTRODUCED_2_;
var 0..100: X_INTRODUCED_3_;
var 0..100: X_INTRODUCED_4_;
var 0..100: X_INTRODUCED_5_;
var 0..100: X_INTRODUCED_6_;
var 0..100: X_INTRODUCED_7_;
var 0..100: X_INTRODUCED_8_;
var 0..100: X_INTRODUCED_9_;
var 0..100: X_INTRODUCED_10_;
var 0..100: X_INTRODUCED_11_;
var 0..100: X_INTRODUCED_12_;
var 0..100: X_INTRODUCED_13_;
var 0..100: X_INTRODUCED_14_;
var 0..100: X_INTRODUCED_15_;
var 0..100: X_INTRODUCED_16_;
var 0..100: X_INTRODUCED_17_;
var 0..100: X_INTRODUCED_18_;
var 0..100: X_INTRODUCED_19_;
var 0..100: X_INTRODUCED_20_;
var 0..100: X_INTRODUCED_21_;
var 0..100: X_INTRODUCED_22_;
var 1..4: X_INTRODUCED_24_;
var 1..4: X_INTRODUCED_33_;
var 1..4: X_INTRODUCED_35_;
var 1..4: X_INTRODUCED_37_;
var 1..4: X_INTRODUCED_39_;
var 1..4: X_INTRODUCED_41_;
var 1..4: X_INTRODUCED_43_;
var 1..4: X_INTRODUCED_45_;
var 0..1000: objective:: output_var;
var 1..101: X_INTRODUCED_78_ ::var_is_introduced :: is_defined_var;
array [1..23] of var int: t:: output_array([1..23]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_];
array [1..23] of var int: r:: output_array([1..23]) = [1,X_INTRODUCED_24_,1,1,1,1,1,1,1,1,X_INTRODUCED_33_,1,X_INTRODUCED_35_,1,X_INTRODUCED_37_,1,X_INTRODUCED_39_,1,X_INTRODUCED_41_,1,X_INTRODUCED_43_,1,X_INTRODUCED_45_];
array [1..15] of var int: X_INTRODUCED_71_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_11_,X_INTRODUCED_13_,X_INTRODUCED_15_,X_INTRODUCED_17_,X_INTRODUCED_19_,X_INTRODUCED_21_];
array [1..15] of var int: X_INTRODUCED_72_ ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of var int: X_INTRODUCED_76_ ::var_is_introduced  = [X_INTRODUCED_24_,X_INTRODUCED_33_,X_INTRODUCED_35_,X_INTRODUCED_37_,X_INTRODUCED_39_,X_INTRODUCED_41_,X_INTRODUCED_43_,X_INTRODUCED_45_];
array [1..8] of var int: X_INTRODUCED_77_ ::var_is_introduced  = [X_INTRODUCED_1_,X_INTRODUCED_10_,X_INTRODUCED_12_,X_INTRODUCED_14_,X_INTRODUCED_16_,X_INTRODUCED_18_,X_INTRODUCED_20_,X_INTRODUCED_22_];
array [1..1] of var int: X_INTRODUCED_79_ ::var_is_introduced  = [X_INTRODUCED_78_];
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_0_,X_INTRODUCED_1_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_1_,X_INTRODUCED_2_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_2_,X_INTRODUCED_3_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_3_,X_INTRODUCED_4_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_4_,X_INTRODUCED_5_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_5_,X_INTRODUCED_6_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_6_,X_INTRODUCED_7_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_7_,X_INTRODUCED_8_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_9_,X_INTRODUCED_10_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_10_,X_INTRODUCED_2_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_11_,X_INTRODUCED_12_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_12_,X_INTRODUCED_3_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_13_,X_INTRODUCED_14_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_14_,X_INTRODUCED_4_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_15_,X_INTRODUCED_16_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_16_,X_INTRODUCED_5_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_17_,X_INTRODUCED_18_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_18_,X_INTRODUCED_6_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_19_,X_INTRODUCED_20_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_20_,X_INTRODUCED_7_],-2);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_21_,X_INTRODUCED_22_],-1);
constraint int_lin_le(X_INTRODUCED_49_,[X_INTRODUCED_22_,X_INTRODUCED_8_],-2);
constraint fzn_diffn(X_INTRODUCED_71_,X_INTRODUCED_72_,X_INTRODUCED_73_,X_INTRODUCED_73_);
constraint fzn_diffn(X_INTRODUCED_77_,X_INTRODUCED_76_,X_INTRODUCED_74_,X_INTRODUCED_75_);
constraint array_int_maximum(objective,X_INTRODUCED_79_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_8_,X_INTRODUCED_78_],-1):: defines_var(X_INTRODUCED_78_);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize objective;
