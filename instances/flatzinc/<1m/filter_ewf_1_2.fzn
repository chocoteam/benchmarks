predicate fzn_diffn(array [int] of var int: x,array [int] of var int: y,array [int] of var int: dx,array [int] of var int: dy);
predicate array_int_maximum(var int: m,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_71_ = [1,-1];
array [1..26] of int: X_INTRODUCED_102_ = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of int: X_INTRODUCED_103_ = [2,2,2,2,2,2,2,2];
array [1..8] of int: X_INTRODUCED_104_ = [1,1,1,1,1,1,1,1];
var 0..100: X_INTRODUCED_0_;
var 0..100: X_INTRODUCED_1_;
var 0..100: X_INTRODUCED_2_;
var 0..100: X_INTRODUCED_3_;
var 0..100: X_INTRODUCED_4_;
var 0..100: X_INTRODUCED_5_;
var 0..100: X_INTRODUCED_6_;
var 0..100: X_INTRODUCED_7_;
var 0..100: X_INTRODUCED_8_;
var 0..100: X_INTRODUCED_9_;
var 0..100: X_INTRODUCED_10_;
var 0..100: X_INTRODUCED_11_;
var 0..100: X_INTRODUCED_12_;
var 0..100: X_INTRODUCED_13_;
var 0..100: X_INTRODUCED_14_;
var 0..100: X_INTRODUCED_15_;
var 0..100: X_INTRODUCED_16_;
var 0..100: X_INTRODUCED_17_;
var 0..100: X_INTRODUCED_18_;
var 0..100: X_INTRODUCED_19_;
var 0..100: X_INTRODUCED_20_;
var 0..100: X_INTRODUCED_21_;
var 0..100: X_INTRODUCED_22_;
var 0..100: X_INTRODUCED_23_;
var 0..100: X_INTRODUCED_24_;
var 0..100: X_INTRODUCED_25_;
var 0..100: X_INTRODUCED_26_;
var 0..100: X_INTRODUCED_27_;
var 0..100: X_INTRODUCED_28_;
var 0..100: X_INTRODUCED_29_;
var 0..100: X_INTRODUCED_30_;
var 0..100: X_INTRODUCED_31_;
var 0..100: X_INTRODUCED_32_;
var 0..100: X_INTRODUCED_33_;
var 1..2: X_INTRODUCED_39_;
var 1..2: X_INTRODUCED_40_;
var 1..2: X_INTRODUCED_46_;
var 1..2: X_INTRODUCED_48_;
var 1..2: X_INTRODUCED_55_;
var 1..2: X_INTRODUCED_58_;
var 1..2: X_INTRODUCED_59_;
var 1..2: X_INTRODUCED_60_;
var 0..1000: objective:: output_var;
var 2..102: X_INTRODUCED_94_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_98_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_99_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_107_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_108_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_109_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_110_ ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_111_ ::var_is_introduced :: is_defined_var;
array [1..34] of var int: t:: output_array([1..34]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_];
array [1..34] of var int: r:: output_array([1..34]) = [1,1,1,1,1,X_INTRODUCED_39_,X_INTRODUCED_40_,1,1,1,1,1,X_INTRODUCED_46_,1,X_INTRODUCED_48_,1,1,1,1,1,1,X_INTRODUCED_55_,1,1,X_INTRODUCED_58_,X_INTRODUCED_59_,X_INTRODUCED_60_,1,1,1,1,1,1,1];
array [1..26] of var int: X_INTRODUCED_100_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_13_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_,X_INTRODUCED_32_,X_INTRODUCED_33_];
array [1..26] of var int: X_INTRODUCED_101_ ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..8] of var int: X_INTRODUCED_105_ ::var_is_introduced  = [X_INTRODUCED_39_,X_INTRODUCED_40_,X_INTRODUCED_46_,X_INTRODUCED_48_,X_INTRODUCED_55_,X_INTRODUCED_58_,X_INTRODUCED_59_,X_INTRODUCED_60_];
array [1..8] of var int: X_INTRODUCED_106_ ::var_is_introduced  = [X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_12_,X_INTRODUCED_14_,X_INTRODUCED_21_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_];
array [1..8] of var int: X_INTRODUCED_112_ ::var_is_introduced  = [X_INTRODUCED_107_,X_INTRODUCED_94_,X_INTRODUCED_108_,X_INTRODUCED_109_,X_INTRODUCED_98_,X_INTRODUCED_99_,X_INTRODUCED_110_,X_INTRODUCED_111_];
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_0_,X_INTRODUCED_2_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_0_,X_INTRODUCED_15_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_0_,X_INTRODUCED_17_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_1_,X_INTRODUCED_4_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_1_,X_INTRODUCED_8_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_1_,X_INTRODUCED_11_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_2_,X_INTRODUCED_3_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_2_,X_INTRODUCED_7_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_2_,X_INTRODUCED_9_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_3_,X_INTRODUCED_4_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_4_,X_INTRODUCED_5_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_4_,X_INTRODUCED_6_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_4_,X_INTRODUCED_10_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_5_,X_INTRODUCED_7_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_6_,X_INTRODUCED_8_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_7_,X_INTRODUCED_9_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_7_,X_INTRODUCED_10_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_8_,X_INTRODUCED_11_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_8_,X_INTRODUCED_13_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_8_,X_INTRODUCED_19_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_9_,X_INTRODUCED_12_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_10_,X_INTRODUCED_13_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_11_,X_INTRODUCED_14_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_12_,X_INTRODUCED_15_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_14_,X_INTRODUCED_16_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_15_,X_INTRODUCED_17_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_15_,X_INTRODUCED_18_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_15_,X_INTRODUCED_29_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_16_,X_INTRODUCED_19_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_16_,X_INTRODUCED_20_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_16_,X_INTRODUCED_28_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_17_,X_INTRODUCED_21_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_18_,X_INTRODUCED_22_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_19_,X_INTRODUCED_23_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_20_,X_INTRODUCED_24_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_21_,X_INTRODUCED_27_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_22_,X_INTRODUCED_25_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_22_,X_INTRODUCED_32_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_23_,X_INTRODUCED_26_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_23_,X_INTRODUCED_33_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_24_,X_INTRODUCED_28_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_25_,X_INTRODUCED_30_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_26_,X_INTRODUCED_31_],-2);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_27_,X_INTRODUCED_29_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_30_,X_INTRODUCED_32_],-1);
constraint int_lin_le(X_INTRODUCED_71_,[X_INTRODUCED_31_,X_INTRODUCED_33_],-1);
constraint fzn_diffn(X_INTRODUCED_100_,X_INTRODUCED_101_,X_INTRODUCED_102_,X_INTRODUCED_102_);
constraint fzn_diffn(X_INTRODUCED_106_,X_INTRODUCED_105_,X_INTRODUCED_103_,X_INTRODUCED_104_);
constraint array_int_maximum(objective,X_INTRODUCED_112_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_24_,X_INTRODUCED_94_],-2):: defines_var(X_INTRODUCED_94_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_30_,X_INTRODUCED_98_],-1):: defines_var(X_INTRODUCED_98_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_31_,X_INTRODUCED_99_],-1):: defines_var(X_INTRODUCED_99_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_13_,X_INTRODUCED_107_],-1):: defines_var(X_INTRODUCED_107_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_28_,X_INTRODUCED_108_],-1):: defines_var(X_INTRODUCED_108_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_29_,X_INTRODUCED_109_],-1):: defines_var(X_INTRODUCED_109_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_32_,X_INTRODUCED_110_],-1):: defines_var(X_INTRODUCED_110_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_33_,X_INTRODUCED_111_],-1):: defines_var(X_INTRODUCED_111_);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize objective;
